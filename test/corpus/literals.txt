================================================================================
Integers
================================================================================

def main():
  return 42
  return 0xDEAD
  return 0XBeaf
  return 0b001
  return 0B001
  return 1_1

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
     (return_statement
      (integer))
     (return_statement
      (integer))
     (return_statement
      (integer))
     (return_statement
      (integer))
     (return_statement
      (integer))
     (return_statement
      (integer)))))


================================================================================
Float
================================================================================

def main():
  return 0.1
  return 3.14

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (float))
      (return_statement
        (float)))))

================================================================================
Hexadecimal and binary float
================================================================================

main = (0xA.1B, 0b1.1)

--------------------------------------------------------------------------------

(source_file
  (fun_function_definition
    (identifier)
    (body
      (tuple
        (float)
        (float)))))

================================================================================
Big float test
================================================================================

# Sleeps for a given amount of seconds as a float.
def IO/sleep(seconds):
  nanos = seconds * 1_000_000_000.0
  lo = to_u24(nanos % 0x1_000_000.0)
  hi = to_u24(nanos / 0x1_000_000.0)
  return IO/nanosleep((hi, lo))

--------------------------------------------------------------------------------

(source_file
  (comment)
  (imp_function_definition
    (identifier
      (path)
      (identifier))
    (parameters
      (identifier))
    (body
      (assignment_statement
        (identifier)
        (binary_op
          (identifier)
          (float)))
      (assignment_statement
        (identifier)
        (call_expression
          (identifier)
          (arguments
            (binary_op
              (identifier)
              (float)))))
      (assignment_statement
        (identifier)
        (call_expression
          (identifier)
          (arguments
            (binary_op
              (identifier)
              (float)))))
      (return_statement
        (call_expression
          (identifier
            (path)
            (identifier))
          (arguments
            (tuple
              (identifier)
              (identifier))))))))

================================================================================
Positive and negative numbers
================================================================================

P1 = +0
P2 = +1
P3 = +22
P4 = +0b1
N1 = -0
N2 = -1
N3 = -22
N4 = -0x1

--------------------------------------------------------------------------------

(source_file
  (fun_function_definition
    (identifier)
    (body
      (integer)))
  (fun_function_definition
    (identifier)
    (body
      (integer)))
  (fun_function_definition
    (identifier)
    (body
      (integer)))
  (fun_function_definition
    (identifier)
    (body
      (integer)))
  (fun_function_definition
    (identifier)
    (body
      (integer)))
  (fun_function_definition
    (identifier)
    (body
      (integer)))
  (fun_function_definition
    (identifier)
    (body
      (integer)))
  (fun_function_definition
    (identifier)
    (body
      (integer))))

================================================================================
String
================================================================================

def main():
  return "hello World!"
  return "🌏🌏🌏"
  return "𝓐𝓫𝓬"
  return "𐌀𐌁𐌂"
  return "日本語"

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (string))
      (return_statement
        (string))
      (return_statement
        (string))
      (return_statement
        (string))
      (return_statement
        (string)))))


================================================================================
Character
================================================================================

def main():
  return 'x'
  return '日'
  return '\u{65e5}'
  return '🌏'

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (character))
      (return_statement
        (character))
      (return_statement
        (character))
      (return_statement
        (character)))))

================================================================================
Symbol
================================================================================

def main():
  return ``
  return `A`
  return `AB`
  return `ABC`
  return `ABCD`
  return `A+CD`
  return `/ACZ`

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (symbol))
      (return_statement
        (symbol))
      (return_statement
        (symbol))
      (return_statement
        (symbol))
      (return_statement
        (symbol))
      (return_statement
        (symbol))
      (return_statement
        (symbol)))))

================================================================================
List 1
================================================================================

def main():
  return []
  return [42, a,]
  return [42, foo, ['a', 'b']]
  return [1, 3.14, "string", '💀', `AAAA`]

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (list))
      (return_statement
        (list
          (integer)
          (identifier)))
      (return_statement
        (list
          (integer)
          (identifier)
          (list
            (character)
            (character))))
      (return_statement
        (list
          (integer)
          (float)
          (string)
          (character)
          (symbol))))))

================================================================================
List 2
================================================================================

show (C/App f x) = (String/join ["(" (show f) " " (show x) ")"])

--------------------------------------------------------------------------------

(source_file
  (fun_function_definition
    (identifier)
    (pattern
      (other_pattern
        (identifier
          (path)
          (identifier))
        (pattern
          (identifier))
        (pattern
          (identifier))))
    (body
      (fun_application
        (identifier
          (path)
          (identifier))
        (list
          (string)
          (fun_application
            (identifier)
            (identifier))
          (string)
          (fun_application
            (identifier)
            (identifier))
          (string))))))

================================================================================
Imp Tree 1
================================================================================

def main():
  return ![![!1, !2], ![!3, !4]]

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (tree_node
          (tree_node
            (tree_leaf
              (integer))
            (tree_leaf
              (integer)))
          (tree_node
            (tree_leaf
              (integer))
            (tree_leaf
              (integer))))))))

================================================================================
Imp Tree 2
================================================================================

def main():
  x = !![![!1, !2], ![!3, !4]]
  y = !([])
  return ![x, y]

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (assignment_statement
        (identifier)
        (tree_leaf
          (tree_node
            (tree_node
              (tree_leaf
                (integer))
              (tree_leaf
                (integer)))
            (tree_node
              (tree_leaf
                (integer))
              (tree_leaf
                (integer))))))
      (assignment_statement
        (identifier)
        (tree_leaf
          (parenthesized_expression
            (list))))
      (return_statement
        (tree_node
          (identifier)
          (identifier))))))

================================================================================
Fun Tree 1
================================================================================

main = ![![!1, !2], ![!3, !4]]

--------------------------------------------------------------------------------

(source_file
  (fun_function_definition
    (identifier)
    (body
      (tree_node
        (tree_node
          (tree_leaf
            (integer))
          (tree_leaf
            (integer)))
        (tree_node
          (tree_leaf
            (integer))
          (tree_leaf
            (integer)))))))

================================================================================
Fun Tree 2
================================================================================

main =
  let x = !![![!1, !2], ![!3, !4]]
  let y = !([])
  ![x, y]

--------------------------------------------------------------------------------

(source_file
  (fun_function_definition
    (identifier)
    (body
      (let_bind
        (pattern
          (identifier))
        (let_value
          (tree_leaf
            (tree_node
              (tree_node
                (tree_leaf
                  (integer))
                (tree_leaf
                  (integer)))
              (tree_node
                (tree_leaf
                  (integer))
                (tree_leaf
                  (integer))))))
        (let_next
          (let_bind
            (pattern
              (identifier))
            (let_value
              (tree_leaf
                (fun_application
                  (list))))
            (let_next
              (tree_node
                (identifier)
                (identifier)))))))))

================================================================================
Map
================================================================================

def main():
  return {}
  return { 0: 4, `hi`: "bye", }

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    name: (identifier)
    parameters: (parameters)
    (body
      (return_statement
        (map))
      (return_statement
        (map
          key: (integer)
          value: (integer)
          key: (symbol)
          value: (string))))))

================================================================================
Tuple
================================================================================

def main():
  return (1, "string", 2.0)
  return (1, (1,2))

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (tuple
          (integer)
          (string)
          (float)))
      (return_statement
        (tuple
          (integer)
          (tuple
            (integer)
            (integer)))))))

================================================================================
Superposition
================================================================================

def main():
  return {1 2 3}
  return {1, 2, 3,}

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (superposition
          (integer)
          (integer)
          (integer)))
      (return_statement
        (superposition
          (integer)
          (integer)
          (integer))))))

================================================================================
Constructor
================================================================================

def main():
  return Type/Ctr { field1: 4, field2: 8 }

--------------------------------------------------------------------------------

(source_file
  (imp_function_definition
    (identifier)
    (parameters)
    (body
      (return_statement
        (constructor
          (identifier
            (path)
            (identifier))
          (identifier)
          (integer)
          (identifier)
          (integer))))))
